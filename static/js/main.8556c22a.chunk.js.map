{"version":3,"sources":["components/author/Login.js","actions/types.js","Dashboard.js","components/Home.js","components/NotFound.js","components/recipes/RecipeItem.js","components/recipes/Recipes.js","components/recipes/RecipeForm.js","components/recipes/RecipeDetail.js","components/RoutesApp.js","components/nav/NavLinkItem.js","components/nav/Navbar.js","components/nav/Header.js","components/App.js","components/Root.js","serviceWorker.js","reducers/authorReducer.js","reducers/recipeReducer.js","reducers/index.js","store.js","index.js"],"names":["Login","dispatch","useDispatch","useState","name","setName","history","useHistory","onSubmit","e","preventDefault","type","payload","author","isAuthenticated","push","placeholder","value","onChange","target","required","Dashboard","to","Home","useSelector","state","NotFound","RecipeItem","recipe","id","title","cookTime","servings","className","role","aria-label","onClick","Recipes","recipes","length","map","key","RecipeForm","setTitle","setCookTime","ingredients","setIngredients","setServings","trim","split","rows","RecipeDetail","props","match","params","find","toString","ingredient","index","RoutesApp","exact","path","component","render","NavLinkItem","activeClassName","Navbar","link","Header","App","Root","Boolean","window","location","hostname","initialState","recipeReducer","action","uuid","filter","rootReducer","combineReducers","store","createStore","compose","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8556c22a.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport {useDispatch} from 'react-redux';\nimport {LOGIN_AUTHOR} from '../../actions/types';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const [name, setName] = useState('');\n    let history = useHistory();\n    const handlerSubmit = e =>{\n        e.preventDefault();\n        dispatch({\n            type: LOGIN_AUTHOR,\n            payload: {\n                author: name,\n                isAuthenticated: true\n            }\n        });\n        setName('');\n        history.push('/')\n    }\n    return (\n        <div>\n           <form onSubmit={handlerSubmit}>\n            <input type=\"text\" placeholder=\"type your name\" value={name}  onChange={e => setName(e.target.value)} required/>\n            <input type=\"submit\" value=\"Fake Login\"/> \n           </form> \n        </div>\n    )\n}\n\nexport default Login;","export const LOGIN_AUTHOR = 'LOGIN_AUTHOR';\nexport const ADD_RECIPE = 'ADD_RECIPE';\nexport const GET_RECIPES = 'GET_RECIPES';\nexport const REMOVE_RECIPE = 'REMOVE_RECIPE';\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Dashboard = ({author}) => {\n  return (\n    <div>\n   <h1>Welcome {author}</h1>\n<Link to='/createrecipe'>Create Recipe</Link>\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport {useSelector} from 'react-redux';\nimport Login from './author/Login';\nimport Dashboard from '../Dashboard';\nconst Home = () => {\n   const {author, isAuthenticated } = useSelector(state =>(state.author))\n    return (\n        <div>\n           {isAuthenticated ? <Dashboard author={author}/> : <Login />}   \n        </div>\n    )\n}\n\nexport default Home;","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h2>404 Page Not Found... :(</h2>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {REMOVE_RECIPE} from '../../actions/types';\nimport {useDispatch} from 'react-redux';\n\nconst RecipeItem = ({recipe}) => {\n    const dispatch = useDispatch();\n    const {id, title, cookTime, servings} = recipe;\n    const remove = () =>{\n       dispatch({\n           type: REMOVE_RECIPE,\n           payload:{id}\n       });\n    }\n    return (\n        <div className=\"Recipe-card\">\n           <h2 className=\"RecipeForm-full\">{title}</h2>\n            <span><span role=\"img\" aria-label=\"clock\">🕒</span> {cookTime}</span>\n            <span><span role=\"img\" aria-label=\"people\">👥</span> {servings}</span>\n            <Link to={`/recipe/${id}`}><span role=\"img\" aria-label=\"eye\">👁️</span> View</Link>\n            <button onClick={remove}><span role=\"img\" aria-label=\"trash\">🗑️</span> Delete</button>\n        </div>\n    )\n}\n\nexport default RecipeItem;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport RecipeItem from './RecipeItem';\nimport './recipe.css'\nconst Recipes = () => {\n    const {recipes} = useSelector(state =>(state.recipe))\n    return (\n        <div className=\"Recipe\">\n                 {recipes.length ? \n                     recipes.map( recipe => (\n                         <RecipeItem  \n                           key={recipe.id}\n                           recipe={recipe}/>\n                     ))\n                  : <h3>Sorry not recipes yet :( ...</h3>}\n        </div>\n    )\n}\n\nexport default Recipes;\n","import React, {useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport {ADD_RECIPE} from '../../actions/types';\nimport './recipeForm.css';\n\nconst RecipeForm = () => {\n  const {author} = useSelector((state) => (state.author))\n  const dispatch  = useDispatch();\n  const [title, setTitle] = useState('');\n  const [cookTime, setCookTime] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [servings, setServings] = useState('');\n   \n  const handleSubmit = e =>{ \n     e.preventDefault();\n     const recipe = {\n      title,\n      ingredients: ingredients.trim().split('\\n'),\n      cookTime,\n      servings,\n      author\n     }\n     dispatch(\n       {\n         type:ADD_RECIPE, \n         payload: {\n           recipe\n         }\n        })\n        setTitle('');\n        setIngredients('');\n        setServings('');\n        setCookTime('');\n  }\n\n  return (\n    <div className=\"RecipeForm\">\n      <h2>Create Recipe</h2>\n      <form onSubmit={handleSubmit}> \n        <input className=\"RecipeForm-full\" type=\"text\" name=\"title\" placeholder=\"Title\"  value={title} onChange={e => setTitle(e.target.value)} required />\n        <textarea className=\"RecipeForm-full\" rows=\"10\" placeholder=\"Ingredients\" value={ingredients} onChange={e=> setIngredients(e.target.value)} required/>\n        <input type=\"number\" name=\"cookTime\" placeholder=\"Cook Time\" value={cookTime}  onChange={e => setCookTime(e.target.value)} required />\n        <input type=\"number\" name=\"servings\" placeholder=\"Servings\" value={servings} onChange={e=> setServings(e.target.value)} required />\n        <input className=\"RecipeForm-full RecipeForm-btnSubmit\" type=\"submit\" value=\"add recipe\" />\n      </form>\n    </div>\n  )\n}\n\nexport default RecipeForm;","import React from 'react'\nimport {useSelector} from 'react-redux';\nconst RecipeDetail = (props) => {\n  const {recipes} = useSelector(state => (state.recipe))\n  const id = props.match.params.id;\n const {title, ingredients, cookTime, servings, author} = recipes.find(recipe => recipe.id.toString() === id.toString());\n  return (\n    <div className=\"card\">\n    <div className=\"card-title\">\n      <h2>{title}</h2>\n    </div>\n    <div className=\"card-ingredient\">\n      {ingredients.map((ingredient,index) =>(\n  <p key={index}>{ingredient}</p>\n))} \n    </div>\n    <div className=\"card-misc\">\n      <div className=\"misc\">\n        <div className=\"value\"><span role=\"img\" aria-label=\"clock\">🕒</span></div>\n        <div className=\"type\">{cookTime}</div>\n      </div>\n      <div className=\"misc\">\n        <div className=\"value\"><span>By</span></div>\n        <div className=\"type\">{author}</div>\n      </div>\n      <div className=\"misc\">\n        <div className=\"value\"><span role=\"img\" aria-label=\"people\">👥</span></div>\n        <div className=\"type\">{servings}</div>\n      </div>\n    </div>\n  </div>\n  \n\n  )\n}\n\nexport default RecipeDetail;\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom'; \nimport Home from '../components/Home';\nimport NotFound from './NotFound';\nimport Recipes from './recipes/Recipes';\nimport RecipeForm from './recipes/RecipeForm';\nimport Login from './author/Login';\nimport RecipeDetail from './recipes/RecipeDetail';\n\nconst RoutesApp = () => {\n    return (\n          <Switch>\n              <Route exact path=\"/\" component={Home} /> \n              <Route path=\"/recipes\" component={Recipes} /> \n              <Route path=\"/createrecipe\" component={RecipeForm} /> \n              <Route path=\"/login\" render={props => <Login {...props}/>} />\n              <Route path=\"/recipe/:id\" component={RecipeDetail} />  \n              <Route component={NotFound}/>\n          </Switch>\n    )\n}\n\nexport default RoutesApp;\n","import React from 'react'\nimport {NavLink} from 'react-router-dom';\n\nconst NavLinkItem = (props) => {\n    const {path, title} = props;\n    return (\n        <NavLink to={path} exact activeClassName=\"NavBar-menu-current\" className=\"NavBar-menu-links\">\n        {title}\n      </NavLink>\n    )\n}\n\nexport default NavLinkItem\n","import React from 'react'\nimport NavLinkItem from './NavLinkItem';\n\nconst Navbar = () => {\n    const links = [\n        {id:1, path:\"/\", title:\"Home\"},\n        {id:2, path:\"/recipes\", title:\"Recipes\"},\n    ]\n    return (\n        <nav className=\"NavBar-menu\">\n          <ul>\n            {links.map(link => ( \n              <li key={link.id}>\n                <NavLinkItem  path={link.path} title={link.title} />\n              </li>\n            ))}\n          </ul>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react';\nimport Navbar from './Navbar';\nimport './header.css';\nconst Header = () => {\n    return (\n        <header  className=\"Header\">\n            <h1>Recipes</h1>\n            <Navbar/>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport RoutesApp from './RoutesApp';\nimport './App.css';\nimport Header from './nav/Header';\n\nconst App = () =>{\n  return (\n     <div>\n       <Header />\n       <RoutesApp />\n     </div>\n       \n  );\n}\n\nexport default App;\n","import React from 'react'\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nconst Root = () => {\n    return (\n        <BrowserRouter>\n         <App />\n        </BrowserRouter>\n    )\n}\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN_AUTHOR} from '../actions/types';\nconst initialState = {\n    isAuthenticated: false,\n    author: {}\n  };\n\nexport const authorReducer = (state = initialState,action) =>{\n    switch(action.type) {\n        case LOGIN_AUTHOR :\n            return {\n                ...state,\n                isAuthenticated: action.payload.isAuthenticated,\n                author: action.payload.author\n            }\n        default:\n            return state;\n    }\n}","import {ADD_RECIPE, REMOVE_RECIPE} from '../actions/types';\nimport uuid from 'uuid/v4';\nconst initialState = {\n    recipes:[{id:1,title:\"Recipe Title\", ingredients: [\"3 palta\",\"5 tomatto\",\"salt\"],cookTime:15, servings: 2, author:\"@elPoeta\"}],\n    recipe: {}\n}\n\nconst recipeReducer = (state = initialState, action) =>{\n    switch(action.type) {\n        case ADD_RECIPE:\n            return {\n                ...state,\n                recipes:[...state.recipes, {\n                id: uuid(),\n                title: action.payload.recipe.title,\n                ingredients: action.payload.recipe.ingredients,\n                cookTime: action.payload.recipe.cookTime,\n                servings: action.payload.recipe.servings,\n                author: action.payload.recipe.author\n              }]\n            }\n              case REMOVE_RECIPE:\n                return {\n                    ...state,\n                    recipes:state.recipes.filter(recipe => recipe.id !== action.payload.id)\n                }\n              default:\n                  return state\n    }\n}\n\nexport default recipeReducer;\n","import { combineReducers } from 'redux'\nimport {authorReducer} from './authorReducer';\nimport recipe from './recipeReducer';\n\nconst rootReducer = combineReducers({\n    author: authorReducer,\n    recipe\n})\n\nexport default rootReducer;","import {createStore, compose} from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer,{},compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport Root from './components/Root';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}>\n                   <Root/>\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}